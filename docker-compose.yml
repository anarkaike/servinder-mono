services:
    app:
        build:
            args:
                user: servinder
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: servinder-app
        container_name: servinder-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - './:/var/www:delegated'
        networks:
            - servinder
        depends_on:
            - db

    db:
        image: 'mysql:8.0'
        container_name: servinder-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_USER: '${DB_USERNAME}'
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - 'mysql-data:/var/lib/mysql'
            - './docker-compose/mysql:/docker-entrypoint-initdb.d:ro'
        networks:
            - servinder
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'

    nginx:
        image: 'nginx:alpine'
        container_name: servinder-nginx
        restart: unless-stopped
        ports:
            - '8000:80'
        volumes:
            - '.:/var/www'
            - './docker-compose/nginx:/etc/nginx/conf.d:ro'
        networks:
            - servinder
        depends_on:
            - app

    node:
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: servinder-node
        volumes:
            - '.:/var/www'
        working_dir: /var/www
        command: sh -c "npm install && npm run dev"
        ports:
            - '5173:5173'
        networks:
            - servinder
        depends_on:
            - app

networks:
    servinder:
        driver: bridge

volumes:
    mysql-data: null
